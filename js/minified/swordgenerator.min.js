"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function getRandomInt(rng,min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(rng.random()*(max-min))+min}var Sword=function Sword(style){_classCallCheck(this,Sword);this.style=style;this.geometry=new THREE.Geometry};var SwordGenerator=function(){function SwordGenerator(seedVal,swordStyle,swordTemplate){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};_classCallCheck(this,SwordGenerator);this.seedVal=seedVal;this.numGenerator=seedVal!=""?{random:new Math.seedrandom(this.seedVal)}:{random:Math.random};this.swordStyle=swordStyle;this.swordTemplate=swordTemplate;this.maxBaseDivs="undefined"===typeof options.maxBaseDivs||"number"!=typeof options.maxBaseDivs?3:options.maxBaseDivs;this.maxMidDivs="undefined"===typeof options.maxMidDivs||"number"!=typeof options.maxMidDivs?3:options.maxMidDivs;this.maxTipDivs="undefined"===typeof options.maxtipDivs||"number"!=typeof options.maxTipDivs?2:options.maxTipDivs;this.minDivLength="undefined"===typeof options.minDivLength||"number"!=typeof options.minDivLength?.2:options.minDivLength;this.bladeWidthToleranceRatio="undefined"===typeof options.bladeWidthToleranceRatio||"number"!=typeof options.bladeWidthToleranceRatio?1:options.bladeWidthToleranceRatio;this.bladeThickness="undefined"===typeof options.bladeThickness||"number"!=typeof options.bladeThickness?.03:options.bladeThickness;this.fullerWidthRatio="undefined"===typeof options.fullerWidthRatio||"number"!=typeof options.fullerWidthRatio?.33:options.fullerWidthRatio;this.applyFuller="undefined"===typeof options.applyFuller||"boolean"!=typeof options.applyFuller?true:options.applyFuller;this.equalBaseDivs="undefined"===typeof options.equalBaseDivs||"boolean"!=typeof options.equalBaseDivs?false:options.equalBaseDivs;this.equalMidDivs="undefined"===typeof options.equalMidDivs||"boolean"!=typeof options.equalMidDivs?false:options.equalMidDivs;this.equalTipDivs="undefined"===typeof options.equalTipDivs||"boolean"!=typeof options.equalTipDivs?true:options.equalTipDivs;this.bladeBaseProportion="undefined"===typeof options.bladeBaseProportion||"number"!=typeof options.bladeBaseProportion?.25:options.bladeBaseProportion;this.bladeMidProportion="undefined"===typeof options.bladeMidProportion||"number"!=typeof options.bladeMidProportion?.65:options.bladeMidProportion}_createClass(SwordGenerator,[{key:"generateSword",value:function generateSword(){var sword=new Sword(this.swordStyle);this.buildBlade(sword.geometry);this.buildGuard(sword.geometry);this.buildHandle(sword.geometry);this.buildPommel(sword.geometry);sword.geometry.uvsNeedUpdate=true;sword.geometry.computeBoundingBox();sword.geometry.computeVertexNormals();sword.geometry.computeFaceNormals();return sword}},{key:"buildBlade",value:function buildBlade(swordGeom){var bladeGeometry={verts:[],faces:[]};var bladeLength=this.swordTemplate.length;var fullerWidth=this.swordTemplate.baseWidth*this.fullerWidthRatio;var fullerDepth=this.bladeThickness/4;var numBaseDivs=getRandomInt(this.numGenerator,1,this.maxBaseDivs+1);var numMidDivs=getRandomInt(this.numGenerator,1,this.maxMidDivs+1);var numTipDivs=Math.floor(this.numGenerator.random()*this.maxTipDivs)+1;var totalBladeDivs=numBaseDivs+numMidDivs+numTipDivs;var baseSectionLength=bladeLength*this.bladeBaseProportion;var midSectionLength=bladeLength*this.bladeMidProportion;var tipSectionLength=bladeLength*(1-(this.bladeBaseProportion+this.bladeMidProportion));var equalBaseDivLength=baseSectionLength/numBaseDivs;var equalMidDivLength=midSectionLength/numMidDivs;var equalTipDivLength=tipSectionLength/numTipDivs;bladeGeometry.verts=this.createBladeCrossSection(this.swordTemplate.baseWidth,fullerDepth,fullerWidth);bladeGeometry=SwordGenerator.extrudeTopMultiple(bladeGeometry,[0,bladeLength/totalBladeDivs,0],totalBladeDivs);var vertIndicesInDivs=SwordGenerator.getAllVertsIndicesAsDivs(bladeGeometry,totalBladeDivs,bladeLength);var baseSpaceLeft=baseSectionLength;var midSpaceLeft=midSectionLength;var tipSpaceLeft=tipSectionLength;bladeGeometry=this.modifyEdgeWidth(bladeGeometry,this.swordTemplate.baseWidth,this.bladeWidthToleranceRatio);bladeGeometry=SwordGenerator.createBladeTip(bladeGeometry);var threeBladeGeometry=SwordGenerator.convertToTHREEGeometry(bladeGeometry);var mat=new THREE.MeshBasicMaterial({color:16711680,wireframe:true});var blade=new THREE.Mesh(threeBladeGeometry,mat);blade.updateMatrix();swordGeom.merge(blade.geometry,blade.matrix)}},{key:"buildGuard",value:function buildGuard(swordGeom){var bladeWidth=arguments.length>1&&arguments[1]!==undefined?arguments[1]:.3;var bladethickness=arguments.length>2&&arguments[2]!==undefined?arguments[2]:.3;var guardThickness=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;var guardBladeRatio=arguments.length>4&&arguments[4]!==undefined?arguments[4]:4;var guardGeom=new THREE.BoxGeometry(guardBladeRatio*bladeWidth,.2,guardThickness);var mat=new THREE.MeshBasicMaterial({color:16711680,wireframe:true});var guard=new THREE.Mesh(guardGeom,mat);guard.updateMatrix();swordGeom.merge(guard.geometry,guard.matrix)}},{key:"buildHandle",value:function buildHandle(swordGeom){var handleLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1.35;var handleWidth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:.1;var numHands=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;var handleGeom=new THREE.CylinderGeometry(handleWidth,handleWidth,handleLength,8);handleGeom.translate(0,-handleLength/2,0);var mat=new THREE.MeshBasicMaterial({color:16711680,wireframe:true});var handle=new THREE.Mesh(handleGeom,mat);handle.updateMatrix();swordGeom.merge(handle.geometry,handle.matrix)}},{key:"buildPommel",value:function buildPommel(swordGeom){var bladeWidth=arguments.length>1&&arguments[1]!==undefined?arguments[1]:.6;var handleLength=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1.35;var pommelBladeWidthRatio=arguments.length>3&&arguments[3]!==undefined?arguments[3]:.5;var pommelWidth=pommelBladeWidthRatio*bladeWidth;var pommelGeom=new THREE.SphereGeometry(pommelWidth,5,4);pommelGeom.translate(0,-handleLength,0);var mat=new THREE.MeshBasicMaterial({color:16711680,wireframe:true});var pommel=new THREE.Mesh(pommelGeom,mat);swordGeom.merge(pommel.geometry,pommel.matrix)}},{key:"createBladeCrossSection",value:function createBladeCrossSection(bladeWidth,fullerDepth,fullerWidth){var verts=[];verts.push([-bladeWidth/2,0,0]);verts.push([-fullerWidth/2,0,-this.bladeThickness/2]);if(this.applyFuller){verts.push([0,0,-this.bladeThickness/2+fullerDepth])}else{verts.push([0,0,-this.bladeThickness/2])}verts.push([fullerWidth/2,0,-this.bladeThickness/2]);verts.push([bladeWidth/2,0,0]);verts.push([fullerWidth/2,0,this.bladeThickness/2]);if(this.applyFuller){verts.push([0,0,this.bladeThickness/2-fullerDepth])}else{verts.push([0,0,this.bladeThickness/2])}verts.push([-fullerWidth/2,0,this.bladeThickness/2]);return verts}},{key:"modifyEdgeWidth",value:function modifyEdgeWidth(geom,templateBladeWidth,widthToleranceRatio){var symmetric=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var edgeVertIndices=SwordGenerator.getEdgeVertIndices(geom,templateBladeWidth);var minBladeWidth=templateBladeWidth-widthToleranceRatio*templateBladeWidth;var maxBladeWidth=templateBladeWidth+widthToleranceRatio*templateBladeWidth;var divisionWidth=templateBladeWidth;for(var i=0;i<edgeVertIndices.left.length;i++){divisionWidth=templateBladeWidth+this.numGenerator.random()*(maxBladeWidth-minBladeWidth);geom.verts[edgeVertIndices.left[i]][0]=-(divisionWidth/2)}for(var i=0;i<edgeVertIndices.right.length;i++){if(!symmetric){divisionWidth=templateBladeWidth+this.numGenerator.random()*(maxBladeWidth-minBladeWidth);geom.verts[edgeVertIndices.right[i]][0]=divisionWidth/2}else if(i<edgeVertIndices.left.length){geom.verts[edgeVertIndices.right[i]][0]=-geom.verts[edgeVertIndices.left[i]][0]}}return geom}}],[{key:"convertToTHREEGeometry",value:function convertToTHREEGeometry(geom){var threeGeometry=new THREE.Geometry;for(var i=0;i<geom.verts.length;i++){threeGeometry.vertices.push(new THREE.Vector3(geom.verts[i][0],geom.verts[i][1],geom.verts[i][2]))}for(var i=0;i<geom.faces.length;i++){threeGeometry.faces.push(new THREE.Face3(geom.faces[i][0],geom.faces[i][1],geom.faces[i][2]))}SwordGenerator.addUVs(threeGeometry);threeGeometry.mergeVertices();return threeGeometry}},{key:"extrudeTopMultiple",value:function extrudeTopMultiple(geom,direction,numRepeat){var generatedGeometry=geom;for(var i=0;i<numRepeat;i++){generatedGeometry=SwordGenerator.extrudeTop(generatedGeometry,direction)}return generatedGeometry}},{key:"extrudeTop",value:function extrudeTop(geom,direction){var topVertIndices=SwordGenerator.getTopVertIndices(geom);var extrudedGeom=SwordGenerator.extrudeVertsByIndex(geom,topVertIndices,direction);return extrudedGeom}},{key:"extrudeVertsByIndex",value:function extrudeVertsByIndex(geom,vertexIndices,direction){if(vertexIndices.length==0){return geom}var priorVertCount=geom.verts.length;for(var i=0;i<vertexIndices.length;i++){var oldVertex=geom.verts[vertexIndices[i]];var newVertX=oldVertex[0]+direction[0];var newVertY=oldVertex[1]+direction[1];var newVertZ=oldVertex[2]+direction[2];var newVertex=[newVertX,newVertY,newVertZ];geom.verts.push(newVertex)}var i=0;var j=priorVertCount;while(i<vertexIndices.length){if(i==vertexIndices.length-1){geom.faces.push([j,vertexIndices[0],vertexIndices[i]]);geom.faces.push([priorVertCount,vertexIndices[0],j])}else{geom.faces.push([j,vertexIndices[i+1],vertexIndices[i]]);geom.faces.push([j+1,vertexIndices[i+1],j])}i++;j++}return geom}},{key:"addUVs",value:function addUVs(geom){for(var i=0;i<geom.faces.length;i++){geom.faceVertexUvs[0].push([new THREE.Vector2(0,0),new THREE.Vector2(0,0),new THREE.Vector2(0,0)])}}},{key:"createBladeTip",value:function createBladeTip(geom){var topVertIndices=this.getTopVertIndices(geom);for(var i=0;i<topVertIndices.length;i++){geom.verts[topVertIndices[i]][0]=0;geom.verts[topVertIndices[i]][2]=0}return geom}},{key:"getSlope",value:function getSlope(x1,y1,x2,y2){return(y2-y1)/(x2-x1)}},{key:"getEdgeVertIndices",value:function getEdgeVertIndices(geom,bladeWidth){return{right:SwordGenerator.getRightEdgeVertIndices(geom,bladeWidth),left:SwordGenerator.getLeftEdgeVertIndices(geom,bladeWidth)}}},{key:"getRightEdgeVertIndices",value:function getRightEdgeVertIndices(geom,bladeWidth){var rightEdgeIndices=[];for(var i=0;i<geom.verts.length;i++){if(geom.verts[i][0]==bladeWidth/2){rightEdgeIndices.push(i)}}return rightEdgeIndices}},{key:"getLeftEdgeVertIndices",value:function getLeftEdgeVertIndices(geom,bladeWidth){var leftEdgeIndices=[];for(var i=0;i<geom.verts.length;i++){if(geom.verts[i][0]==-bladeWidth/2){leftEdgeIndices.push(i)}}return leftEdgeIndices}},{key:"getTopVertIndices",value:function getTopVertIndices(geom){var geomHeight=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;var topVertIndices=[];if(geomHeight!=-1){for(var i=0;i<geom.verts.length;i++){if(geom.verts[i][1]==geomHeight){topVertIndices.push(i)}}}else{var maxHeight=-1;var indexOfMax=-1;for(var i=0;i<geom.verts.length;i++){if(geom.verts[i][1]>maxHeight){indexOfMax=i;maxHeight=geom.verts[i][1]}}for(var i=0;i<geom.verts.length;i++){if(geom.verts[i][1]==maxHeight){topVertIndices.push(i)}}}return topVertIndices}},{key:"getAllVertsIndicesAsDivs",value:function getAllVertsIndicesAsDivs(geom,numDivs,bladeLength){var divVerts=[];var divSpacing=bladeLength/numDivs;for(var i=0;i<numDivs;i++){divVerts.push([]);for(var j=0;j<geom.verts.length;j++){if(geom.verts[j][2]==i){divVerts[i].push(j)}}}return divVerts}}]);return SwordGenerator}();